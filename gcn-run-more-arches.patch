diff -up gcc-15.1.0-RC-20250418/gcc/config.gcc.5~ gcc-15.1.0-RC-20250418/gcc/config.gcc
--- gcc-15.1.0-RC-20250418/gcc/config.gcc.5~	2025-04-18 11:20:10.000000000 +0200
+++ gcc-15.1.0-RC-20250418/gcc/config.gcc	2025-04-23 01:01:24.738917715 +0200
@@ -1810,7 +1810,7 @@ amdgcn-*-amdhsa)
 	extra_objs="${extra_objs} gcn-tree.o"
 	extra_options="${extra_options} gcn/gcn-tables.opt"
 	case "$host" in
-	x86_64*-*-linux-gnu )
+	*-linux-gnu|*-linux-uclibc|*-linux-musl )
 		if test "$ac_cv_search_dlopen" != no; then
 			extra_programs="${extra_programs} gcn-run\$(exeext)"
 		fi
diff -up gcc-15.1.0-RC-20250418/include/hsa.h.5~ gcc-15.1.0-RC-20250418/include/hsa.h
--- gcc-15.1.0-RC-20250418/include/hsa.h.5~	2025-04-18 11:20:18.000000000 +0200
+++ gcc-15.1.0-RC-20250418/include/hsa.h	2025-04-23 00:58:21.217767311 +0200
@@ -66,7 +66,7 @@
 // Try to detect CPU endianness
 #if !defined(LITTLEENDIAN_CPU) && !defined(BIGENDIAN_CPU)
 #if defined(__i386__) || defined(__x86_64__) || defined(_M_IX86) || \
-    defined(_M_X64)
+    defined(_M_X64) || defined(__aarch64__) || defined(__riscv64__) || defined(__riscv) || defined(__loongarch64__) || defined(__LITTLE_ENDIAN__)
 #define LITTLEENDIAN_CPU
 #endif
 #endif
diff -up gcc-15.1.0-RC-20250418/libgomp/configure.5~ gcc-15.1.0-RC-20250418/libgomp/configure
--- gcc-15.1.0-RC-20250418/libgomp/configure.5~	2025-04-18 11:20:21.000000000 +0200
+++ gcc-15.1.0-RC-20250418/libgomp/configure	2025-04-23 00:58:21.218602778 +0200
@@ -15308,7 +15308,7 @@ if test x"$enable_offload_targets" != x;
     case $tgt in
       nvptx*)
 	case "${target}" in
-	  aarch64*-*-* | powerpc64le-*-* | x86_64-*-*)
+	  aarch64*-*-* | powerpc64le-*-* | x86_64-*-* | riscv64-*-* | loongarch64-*-*)
 	    case "$ac_cv_sizeof_void_p" in
 	      4)
 		# PR libgomp/65099: Currently, we only support offloading in
@@ -15329,7 +15329,7 @@ if test x"$enable_offload_targets" != x;
 	;;
       amdgcn*)
 	case "${target}" in
-	  x86_64-*-*)
+	  x86_64-*-*|aarch64-*-*|riscv64-*-*|loongarch64-*-*|powerpc64le-*-*)
 	    case "$ac_cv_sizeof_void_p" in
 	      4)
 		PLUGIN_GCN=0
diff -up gcc-15.1.0-RC-20250418/libgomp/plugin/configfrag.ac.5~ gcc-15.1.0-RC-20250418/libgomp/plugin/configfrag.ac
--- gcc-15.1.0-RC-20250418/libgomp/plugin/configfrag.ac.5~	2025-04-18 11:20:19.000000000 +0200
+++ gcc-15.1.0-RC-20250418/libgomp/plugin/configfrag.ac	2025-04-23 00:58:21.219094025 +0200
@@ -61,7 +61,7 @@ if test x"$enable_offload_targets" != x;
     case $tgt in
       nvptx*)
 	case "${target}" in
-	  aarch64*-*-* | powerpc64le-*-* | x86_64-*-*)
+	  aarch64*-*-* | powerpc64le-*-* | x86_64-*-* | riscv64-*-* | loongarch64-*-*)
 	    case "$ac_cv_sizeof_void_p" in
 	      4)
 		# PR libgomp/65099: Currently, we only support offloading in
@@ -82,7 +82,7 @@ if test x"$enable_offload_targets" != x;
 	;;
       amdgcn*)
 	case "${target}" in
-	  x86_64-*-*)
+	  x86_64-*-*|aarch64-*-*|riscv64-*-*|loongarch64-*-*|powerpc64le-*-*)
 	    case "$ac_cv_sizeof_void_p" in
 	      4)
 		PLUGIN_GCN=0
